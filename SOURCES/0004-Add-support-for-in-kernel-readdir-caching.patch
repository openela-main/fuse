From da57354dc8593d37eff59bc7836ee4e460a2659a Mon Sep 17 00:00:00 2001
From: Nikolaus Rath <Nikolaus@rath.org>
Date: Sat, 6 Apr 2019 18:34:57 +0100
Subject: [PATCH 4/4] Add support for in-kernel readdir caching.

Fixes: #394.
(cherry picked from commit 1552b467fcd7751360299c5139382d78538e12b3)
Signed-off-by: Pavel Reichl <preichl@redhat.com>
---
 include/fuse_common.h | 18 +++++++++++++-----
 lib/fuse_lowlevel.c   |  2 ++
 2 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/include/fuse_common.h b/include/fuse_common.h
index a5a0ea5..a28ffa5 100644
--- a/include/fuse_common.h
+++ b/include/fuse_common.h
@@ -45,9 +45,11 @@ struct fuse_file_info {
 	/** Can be filled in by open, to use direct I/O on this file. */
 	unsigned int direct_io : 1;
 
-	/** Can be filled in by open, to indicate that currently
-	    cached file data (that the filesystem provided the last
-	    time the file was open) need not be invalidated. */
+	/** Can be filled in by open. It signals the kernel that any
+	    currently cached file data (ie., data that the filesystem
+	    provided the last time the file was open) need not be
+	    invalidated. Has no effect when set in other contexts (in
+	    particular it does nothing when set by opendir()). */
 	unsigned int keep_cache : 1;
 
 	/** Indicates a flush operation.  Set in flush operation, also
@@ -64,8 +66,14 @@ struct fuse_file_info {
 	   May only be set in ->release(). */
 	unsigned int flock_release : 1;
 
-	/** Padding.  Do not use*/
-	unsigned int padding : 27;
+	/** Can be filled in by opendir. It signals the kernel to
+	    enable caching of entries returned by readdir().  Has no
+	    effect when set in other contexts (in particular it does
+	    nothing when set by open()). */
+	unsigned int cache_readdir : 1;
+
+	/** Padding.  Reserved for future use*/
+	unsigned int padding : 26;
 
 	/** File handle.  May be filled in by filesystem in open().
 	    Available in all other file operations */
diff --git a/lib/fuse_lowlevel.c b/lib/fuse_lowlevel.c
index 43f785f..6379e09 100644
--- a/lib/fuse_lowlevel.c
+++ b/lib/fuse_lowlevel.c
@@ -392,6 +392,8 @@ static void fill_open(struct fuse_open_out *arg,
 		arg->open_flags |= FOPEN_DIRECT_IO;
 	if (f->keep_cache)
 		arg->open_flags |= FOPEN_KEEP_CACHE;
+	if (f->cache_readdir)
+		arg->open_flags |= FOPEN_CACHE_DIR;
 	if (f->nonseekable)
 		arg->open_flags |= FOPEN_NONSEEKABLE;
 }
-- 
2.36.1

